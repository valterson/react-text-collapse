{"version":3,"sources":["../src/ReactTextCollapse.js"],"names":["ReactTextCollapse","props","collapse","options","state","collapseText","expandText","float","setState","onClick","children","minHeight","maxHeight","h","display","overflow","height","toggleAction","bind","renderHelperText","propTypes","node","isRequired","object","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,iB;;;AAOnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,QAGEC,QAHF,GAGiB,MAAKD,KAHtB,CAGTE,OAHS,CAGED,QAHF;;AAIjB,UAAKE,KAAL,GAAa;AACXF,gBAAUA,WAAWA,QAAX,GAAsB;AADrB,KAAb;AAJiB;AAOlB;;;;uCAEkB;AAAA,2BACiC,KAAKD,KADtC,CACTE,OADS;AAAA,UACEE,YADF,kBACEA,YADF;AAAA,UACgBC,UADhB,kBACgBA,UADhB;AAAA,UAETJ,QAFS,GAEI,KAAKE,KAFT,CAETF,QAFS;;AAGjB,UAAIA,QAAJ,EAAc;AACZ,eAAO;AAAA;AAAA,YAAK,OAAO,EAACK,OAAM,MAAP,EAAZ;AAA6BF;AAA7B,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAA;AAAA,YAAK,OAAO,EAACE,OAAM,MAAP,EAAZ;AAA6BD;AAA7B,SAAP;AACD;AACF;;;mCAEc;AAAA,UACPJ,QADO,GACM,KAAKE,KADX,CACPF,QADO;;AAEbA,iBAAW,CAACA,QAAZ;AACA,WAAKM,QAAL,CAAc,EAAEN,kBAAF,EAAd;AACA,WAAKD,KAAL,CAAWQ,OAAX,CAAmBP,QAAnB;AACD;;;6BAEQ;AAAA;;AAAA,UACCQ,QADD,GACc,KAAKT,KADnB,CACCS,QADD;AAAA,4BAE0B,KAAKT,KAAL,CAAWE,OAFrC;AAAA,UAECQ,SAFD,mBAECA,SAFD;AAAA,UAEYC,SAFZ,mBAEYA,SAFZ;AAAA,UAGCV,QAHD,GAGc,KAAKE,KAHnB,CAGCF,QAHD;;AAIP,aACE;AAAA;AAAA;AACE,wBAAc,EAACW,GAAE,CAAH,EADhB;AAEE,iBAAO,EAACA,GAAG,yBAAOX,WAAWS,SAAX,GAAuBC,SAA9B,CAAJ,EAFT;AAII;AAAA,cAAEC,CAAF,QAAEA,CAAF;AAAA,iBACE;AAAA;AAAA;AACE;AAAA;AAAA;AACI,uBAAO;AACLC,kCADK;AAELC,oCAFK;AAGLC,0BAAQH;AAHH,iBADX;AAMGH;AANH,aADF;AASE;AAAA;AAAA,gBAAK,SAAS,OAAKO,YAAL,CAAkBC,IAAlB,QAAd;AAA6C,qBAAKC,gBAAL;AAA7C;AATF,WADF;AAAA;AAJJ,OADF;AAqBD;;;;;;AA1DkBnB,iB,CACZoB,S,GAAY;AACjBV,YAAU,oBAAUW,IAAV,CAAeC,UADR;AAEjBnB,WAAS,oBAAUoB,MAAV,CAAiBD,UAFT;AAGjBb,WAAS,oBAAUe;AAHF,C;kBADAxB,iB","file":"ReactTextCollapse.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { Motion, spring } from \"react-motion\";\n\nexport default class ReactTextCollapse extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    options: PropTypes.object.isRequired,\n    onClick: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { options: { collapse } } = this.props;\n    this.state = {\n      collapse: collapse ? collapse : true\n    }\n  }\n\n  renderHelperText() {\n    const { options: { collapseText, expandText } } = this.props; \n    const { collapse } = this.state;\n    if (collapse) {\n      return <div style={{float:'left'}}>{collapseText}</div>\n    } else {\n      return <div style={{float:'left'}}>{expandText}</div>\n    }\n  }\n\n  toggleAction() {\n    let { collapse } = this.state;\n    collapse = !collapse;\n    this.setState({ collapse});\n    this.props.onClick(collapse)\n  }\n\n  render() {\n    const { children } = this.props;\n    const { minHeight, maxHeight } = this.props.options;\n    const { collapse } = this.state;\n    return (\n      <Motion\n        defaultStyle={{h:0}}\n        style={{h: spring(collapse ? minHeight : maxHeight)}}>\n        {\n          ({h}) => (\n            <div>\n              <div \n                  style={{\n                    display: `block`,\n                    overflow: `hidden`,\n                    height: h,\n                  }}>\n                {children}\n              </div>\n              <div onClick={this.toggleAction.bind(this)}>{this.renderHelperText()}</div>\n            </div>\n          )\n        }\n      </Motion>\n    );\n  }\n}\n"]}